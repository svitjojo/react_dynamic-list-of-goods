{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","json","Promise","reject","Error","status","statusText","get5First","a","allGoods","sort","goodOne","goodTwo","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","hasError","setHasError","handleButton","useCallback","f","selectedGoods","console","error","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,YCNX,SAASC,IACd,OAAOC,MAHI,0EAIRC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,GACxBD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAJ,UAAaL,EAASM,OAAtB,aAAiCN,EAASO,iBAI1D,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACAZ,IADA,cACjBa,EADiB,yBAGhBA,EACJC,MAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQjB,KAAKmB,cAAcD,EAAQlB,SAC/DoB,MAAM,EAAG,IALW,2CAAH,qDAQTC,EAAW,uCAAG,4BAAAP,EAAA,sEACFZ,IADE,cACnBa,EADmB,yBAGlBA,EAASO,QAAO,kBAAyB,QAAzB,EAAGvB,UAHD,2CAAH,qDCdXwB,EAAgB,WAC3B,MAA0BC,mBAAsB,IAAhD,mBAAO7B,EAAP,KAAc8B,EAAd,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAGMC,EAAeC,uBAAY,SAACC,GAChC,6BAAO,4BAAAhB,EAAA,6DACLa,GAAY,GADP,kBAIyBG,IAJzB,OAIGC,EAJH,OAMHN,EAASM,GANN,gDASHC,QAAQC,MAAR,MACAN,GAAY,GAVT,2DAaN,IAEH,OACE,sBAAKO,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASR,EAAa1B,GAHxB,4BAQA,wBACEiC,KAAK,SACL,UAAQ,oBACRC,QAASR,EAAaf,GAHxB,gCAQA,wBACEsB,KAAK,SACL,UAAQ,aACRC,QAASR,EAAaP,GAHxB,4BAQCK,EAEG,6CAEA,cAAClC,EAAD,CAAWG,MAAOA,QCzD5B0C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fc6a9650.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json1`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => (response.ok\n      ? response.json()\n      : Promise.reject(new Error(`${response.status}: ${response.statusText}`))\n    ));\n}\n\nexport const get5First = async () => {\n  const allGoods = await getAll();\n\n  return allGoods\n    .sort((goodOne, goodTwo) => (goodOne.name.localeCompare(goodTwo.name)))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const allGoods = await getAll();\n\n  return allGoods.filter(({ color }) => color === 'red');\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[] | []>([]);\n  const [hasError, setHasError] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleButton = useCallback((f: Function) => {\n    return async () => {\n      setHasError(false);\n\n      try {\n        const selectedGoods = await f();\n\n        setGoods(selectedGoods);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(error);\n        setHasError(true);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleButton(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleButton(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleButton(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {hasError\n        ? (\n          <p>No goods yet</p>\n        ) : (\n          <GoodsList goods={goods} />\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}